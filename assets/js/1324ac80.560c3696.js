"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[9384],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return h}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=c(r),h=a,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||i;return r?n.createElement(m,s(s({ref:t},d),{},{components:r})):n.createElement(m,s({ref:t},d))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7246:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),s=["components"],o={id:"shared-parts-library",title:"Shared parts library",description:"Use the Vertex platform's shared parts library concept to create reusable parts libraries."},l=void 0,c={unversionedId:"guides/shared-parts-library",id:"guides/shared-parts-library",title:"Shared parts library",description:"Use the Vertex platform's shared parts library concept to create reusable parts libraries.",source:"@site/docs/guides/shared-parts-library.mdx",sourceDirName:"guides",slug:"/guides/shared-parts-library",permalink:"/docs/guides/shared-parts-library",editUrl:"https://github.com/Vertexvis/dev-portal/tree/main/docs/guides/shared-parts-library.mdx",tags:[],version:"current",frontMatter:{id:"shared-parts-library",title:"Shared parts library",description:"Use the Vertex platform's shared parts library concept to create reusable parts libraries."},sidebar:"guidesSidebar",previous:{title:"Synchronizing with Connect",permalink:"/docs/guides/sync-scenes-to-connect"},next:{title:"Install Web UI Components",permalink:"/docs/guides/install-sdk"}},d=[{value:"Motivation",id:"motivation",children:[],level:2},{value:"Description",id:"description",children:[{value:"Grants",id:"grants",children:[],level:3},{value:"Scope of parts domain",id:"scope-of-parts-domain",children:[],level:3},{value:"Scope of property-sets domain",id:"scope-of-property-sets-domain",children:[],level:3},{value:"Scenes vs. parts",id:"scenes-vs-parts",children:[],level:3}],level:2},{value:"Usage",id:"usage",children:[{value:"Account IDs",id:"account-ids",children:[],level:3},{value:"Making and revoking grants",id:"making-and-revoking-grants",children:[],level:3},{value:"Getting and listing current grants",id:"getting-and-listing-current-grants",children:[],level:3},{value:"Listing available parts",id:"listing-available-parts",children:[],level:3},{value:"Creating scene items with granted parts",id:"creating-scene-items-with-granted-parts",children:[],level:3},{value:"Metadata",id:"metadata",children:[],level:3}],level:2}],p={toc:d};function u(e){var t=e.components,r=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"motivation"},"Motivation"),(0,i.kt)("p",null,"To facilitate organization and access control of parts shared across an enterprise, the Vertex API provides the\nconcept of shared parts libraries. The granularity of control is at the level of Vertex platform accounts.\nA parts library (as created and accessible through ",(0,i.kt)("inlineCode",{parentName:"p"},"/parts")," and related API endpoints) from one account can be shared\nwith another with read-only access, allowing users in the granted account to make scenes with shared parts, separating\nmanagement of the shared library from its usage."),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("h3",{id:"grants"},"Grants"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Grants")," are made from a grantor account to a grantee account. Creating a grant requires credentials for the grantor\nand a UUID identifier for the grantee. There are two domains of grants, ",(0,i.kt)("inlineCode",{parentName:"p"},"parts")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"property-sets"),"."),(0,i.kt)("h3",{id:"scope-of-parts-domain"},"Scope of parts domain"),(0,i.kt)("p",null,"Once a ",(0,i.kt)("inlineCode",{parentName:"p"},"parts")," domain grant is made, users of the grantee account will be able to make scene items using parts from the\ngrantor account (without credentials for the grantor account), but will not be able to add, remove, or otherwise\nmodify the parts in the grantor's library. Regardless of the source of the parts, the created scene items will still\nbe owned by the account from which the creation calls were made."),(0,i.kt)("h3",{id:"scope-of-property-sets-domain"},"Scope of property-sets domain"),(0,i.kt)("p",null,"Once a ",(0,i.kt)("inlineCode",{parentName:"p"},"property-sets")," domain grant is made, users of the grantee account will be able to see metadata properties for the\nparts from the grantor account (without credentials for the grantor account), but will\nnot be able to add, remove, or otherwise modify the metadata properties in the grantor's library."),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"property-sets")," domain grant is typically only useful along with a ",(0,i.kt)("inlineCode",{parentName:"p"},"parts")," domain grant between the same accounts."),(0,i.kt)("h3",{id:"scenes-vs-parts"},"Scenes vs. parts"),(0,i.kt)("p",null,"Once shared parts and metadata properties are incorporated into a scene through ",(0,i.kt)("inlineCode",{parentName:"p"},"/scene-items")," and related API\nendpoints, they will be visible to users of the grantee account. When grants are revoked, these scene items will still\nbe visible in these scenes. Grants only control the scene creation, and all further viewing or manipulation of the scene\nis governed by the account in which the scenes and scene items are created."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"account-ids"},"Account IDs"),(0,i.kt)("p",null,"Accounts are identified by UUIDs assigned when they are created. The admin dashboard can be used to find these\nUUIDs if they were not recorded when the accounts were created."),(0,i.kt)("h3",{id:"making-and-revoking-grants"},"Making and revoking grants"),(0,i.kt)("p",null,"Grants are made with the ",(0,i.kt)("inlineCode",{parentName:"p"},"POST /permission-grants")," call."),(0,i.kt)("p",null,"Grants are revoked with the ",(0,i.kt)("inlineCode",{parentName:"p"},"DELETE /permission-grants/:id")," call."),(0,i.kt)("h3",{id:"getting-and-listing-current-grants"},"Getting and listing current grants"),(0,i.kt)("p",null,"Grants are listed with the ",(0,i.kt)("inlineCode",{parentName:"p"},"GET /permission-grants")," call. Individual grants can be retrieved by ID with\n",(0,i.kt)("inlineCode",{parentName:"p"},"GET /permission-grants/:id")),(0,i.kt)("h3",{id:"listing-available-parts"},"Listing available parts"),(0,i.kt)("p",null,"Once a ",(0,i.kt)("inlineCode",{parentName:"p"},"parts")," domain grant is made, the ",(0,i.kt)("inlineCode",{parentName:"p"},"GET /parts")," call will default to listing all parts available to the\ncalling account. The parts returned from this include an ",(0,i.kt)("inlineCode",{parentName:"p"},"owner")," property in the ",(0,i.kt)("inlineCode",{parentName:"p"},"relationships")," property, so that the\nowning account can be distinguished. The ",(0,i.kt)("inlineCode",{parentName:"p"},"GET /parts")," call can be filtered by a specific owner by including an ",(0,i.kt)("inlineCode",{parentName:"p"},"ownerId"),"\nfilter."),(0,i.kt)("h3",{id:"creating-scene-items-with-granted-parts"},"Creating scene items with granted parts"),(0,i.kt)("p",null,"Once the grant is made, creating a scene item with a granted part is identical regardless of which library the part\ncomes from."),(0,i.kt)("h3",{id:"metadata"},"Metadata"),(0,i.kt)("p",null,"Metadata from the parts library will only be included on scene items if the ",(0,i.kt)("inlineCode",{parentName:"p"},"property-sets")," domain grant is made along\nwith the ",(0,i.kt)("inlineCode",{parentName:"p"},"parts")," domain grant."))}u.isMDXComponent=!0}}]);