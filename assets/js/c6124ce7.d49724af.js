(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[2420],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return u}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),u=a,k=c["".concat(d,".").concat(u)]||c[u]||m[u]||i;return n?r.createElement(k,l(l({ref:t},p),{},{components:n})):r.createElement(k,l({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},70316:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return d},toc:function(){return s},default:function(){return m}});var r=n(22122),a=n(19756),i=(n(67294),n(3905)),l=["components"],o={id:"sdk-web-api",title:"Viewer component API",sidebar_label:"Viewer component API"},d={unversionedId:"sdk/sdk-web-api",id:"version-beta/sdk/sdk-web-api",isDocsHomePage:!1,title:"Viewer component API",description:"Properties",source:"@site/versioned_docs/version-beta/sdk/sdk-web-api.md",sourceDirName:"sdk",slug:"/sdk/sdk-web-api",permalink:"/docs/beta/sdk/sdk-web-api",editUrl:"https://github.com/Vertexvis/dev-portal/tree/main/versioned_docs/version-beta/sdk/sdk-web-api.md",version:"beta",sidebar_label:"Viewer component API",frontMatter:{id:"sdk-web-api",title:"Viewer component API",sidebar_label:"Viewer component API"},sidebar:"version-beta/docs",previous:{title:"Getting started with Web UI Components",permalink:"/docs/beta/sdk/sdk-web-getting-started"},next:{title:"Xamarin UI Components introduction",permalink:"/docs/beta/sdk/sdk-xamarin"}},s=[{value:"Properties",id:"properties",children:[]},{value:"Events",id:"events",children:[]},{value:"Methods",id:"methods",children:[{value:"<code>getFrameAttributes() =&gt; Promise&lt;FrameAttributes&gt;</code>",id:"getframeattributes--promiseframeattributes",children:[]},{value:"<code>getInteractionHandlers() =&gt; Promise&lt;InteractionHandler[]&gt;</code>",id:"getinteractionhandlers--promiseinteractionhandler",children:[]},{value:"<code>load(resource: string) =&gt; Promise&lt;void&gt;</code>",id:"loadresource-string--promisevoid",children:[]},{value:"<code>newScene() =&gt; Promise&lt;SceneBuilder&gt;</code>",id:"newscene--promisescenebuilder",children:[]},{value:"<code>registerCommand&lt;R, T&gt;(id: string, factory: CommandFactory&lt;R&gt;, thisArg?: T) =&gt; Promise&lt;Disposable&gt;</code>",id:"registercommandr-tid-string-factory-commandfactoryr-thisarg-t--promisedisposable",children:[]},{value:"<code>registerInteractionHandler(interactionHandler: InteractionHandler) =&gt; Promise&lt;Disposable&gt;</code>",id:"registerinteractionhandlerinteractionhandler-interactionhandler--promisedisposable",children:[]},{value:"<code>scene() =&gt; Promise&lt;Scene&gt;</code>",id:"scene--promisescene",children:[]}]},{value:"CSS custom properties",id:"css-custom-properties",children:[]}],p={toc:s};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"cameraControls")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"camera-controls")),(0,i.kt)("td",{parentName:"tr",align:null},"The default mouse and touch interactions provided by the viewer. Can be enabled (default) or disabled."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:null},"An object or JSON encoded string that defines configuration settings for the viewer."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Config \\| string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"credentials")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"credentials")),(0,i.kt)("td",{parentName:"tr",align:null},"A ",(0,i.kt)("inlineCode",{parentName:"td"},"Credentials")," object or JSON encoded string of a ",(0,i.kt)("inlineCode",{parentName:"td"},"Credentials")," object. The viewer must set this property or a combination of ",(0,i.kt)("inlineCode",{parentName:"td"},"credentialsClientId"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"credentialsToken")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"credentialsApiKey"),". This property takes precedence."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ApiKey \\| BearerToken \\| Oauth2 \\| Unauthorized \\| string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"credentialsApiKey")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"credentials-api-key")),(0,i.kt)("td",{parentName:"tr",align:null},"The api key for a user token credentials flow."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"credentialsClientId")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"credentials-client-id")),(0,i.kt)("td",{parentName:"tr",align:null},"The client ID for an OAuth 2 credentials flow. ",(0,i.kt)("inlineCode",{parentName:"td"},"credentialsToken")," must also be set."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"credentialsToken")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"credentials-token")),(0,i.kt)("td",{parentName:"tr",align:null},"The token for an OAuth 2 credentials flow. Property is ignored if ",(0,i.kt)("inlineCode",{parentName:"td"},"credentialsClientId")," has not been set."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"httpClient")," ",(0,i.kt)("em",{parentName:"td"},"(required)")),(0,i.kt)("td",{parentName:"tr",align:null},"--"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(request: HttpRequest) => Promise<HttpResponse>")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"model")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"model")),(0,i.kt)("td",{parentName:"tr",align:null},"A URN of the model resource to load when the component is mounted in the DOM tree. The specified resource is a URN in one of the following formats: ",(0,i.kt)("em",{parentName:"td"}," ",(0,i.kt)("inlineCode",{parentName:"em"},"urn:vertexvis:eedc:file:<fileid>")," ")," ",(0,i.kt)("inlineCode",{parentName:"td"},"urn:vertexvis:eedc:scenestate:<scenestateid>")," ","*"," ",(0,i.kt)("inlineCode",{parentName:"td"},"urn:vertexvis:eedc:file?externalId=<externalId>")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Event"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"frameDrawn")),(0,i.kt)("td",{parentName:"tr",align:null},"Emits an event when a frame has been drawn to the viewer's canvas. The event includes details about the drawn frame, such as the ",(0,i.kt)("inlineCode",{parentName:"td"},"Scene")," information related to the scene."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"CustomEvent<FrameAttributes>"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"frameReceived")),(0,i.kt)("td",{parentName:"tr",align:null},"Emits an event when a frame has been received by the viewer. The event includes details about the drawn frame, such as the ",(0,i.kt)("inlineCode",{parentName:"td"},"Scene")," information related to the scene."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"CustomEvent<FrameAttributes>"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"pick")),(0,i.kt)("td",{parentName:"tr",align:null},"Emits an event whenever the user performs a pick operation. The event includes the ",(0,i.kt)("inlineCode",{parentName:"td"},"HitResult"),"s of the pick and any keyboard keys that were pressed."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"CustomEvent<PickEventDetails>"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"tokenExpired")),(0,i.kt)("td",{parentName:"tr",align:null},"Emits an event when a provided OAuth 2 token is expired, or is about to expire, causing issues with establishing a WebSocket connection, or performing API calls."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"CustomEvent<void>"))))),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"getframeattributes--promiseframeattributes"},(0,i.kt)("inlineCode",{parentName:"h3"},"getFrameAttributes() => Promise<FrameAttributes>")),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,"Type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise<FrameAttributes>")),(0,i.kt)("h3",{id:"getinteractionhandlers--promiseinteractionhandler"},(0,i.kt)("inlineCode",{parentName:"h3"},"getInteractionHandlers() => Promise<InteractionHandler[]>")),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,"Type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise<InteractionHandler[]>")),(0,i.kt)("h3",{id:"loadresource-string--promisevoid"},(0,i.kt)("inlineCode",{parentName:"h3"},"load(resource: string) => Promise<void>")),(0,i.kt)("p",null,"Loads the given resource into the viewer and returns a ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise")," that\nresolves when the scene is loaded. The specified resource is a URN in\none of the following formats:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"urn:vertexvis:eedc:file:<fileid>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"urn:vertexvis:eedc:scenestate:<scenestateid>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"urn:vertexvis:eedc:file?externalId=<externalId>"))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,"Type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise<void>")),(0,i.kt)("h3",{id:"newscene--promisescenebuilder"},(0,i.kt)("inlineCode",{parentName:"h3"},"newScene() => Promise<SceneBuilder>")),(0,i.kt)("p",null,"Returns a ",(0,i.kt)("inlineCode",{parentName:"p"},"SceneBuilder")," that is used to create a scene before viewing. A\n",(0,i.kt)("inlineCode",{parentName:"p"},"SceneBuilder")," provides a fluent interface to specify what file or scene to\nbase the new scene off of, as well as operations to modify the new scene."),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,"Type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise<SceneBuilder>")),(0,i.kt)("h3",{id:"registercommandr-tid-string-factory-commandfactoryr-thisarg-t--promisedisposable"},(0,i.kt)("inlineCode",{parentName:"h3"},"registerCommand<R, T>(id: string, factory: CommandFactory<R>, thisArg?: T) => Promise<Disposable>")),(0,i.kt)("p",null,"Internal API."),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,"Type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise<Disposable>")),(0,i.kt)("h3",{id:"registerinteractionhandlerinteractionhandler-interactionhandler--promisedisposable"},(0,i.kt)("inlineCode",{parentName:"h3"},"registerInteractionHandler(interactionHandler: InteractionHandler) => Promise<Disposable>")),(0,i.kt)("p",null,"Registers and initializes an interaction handler with the viewer. Returns a\n",(0,i.kt)("inlineCode",{parentName:"p"},"Disposable")," that should be used to deregister the interaction handler."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"InteractionHandler"),"s are used to build custom mouse and touch interactions\nfor the viewer. Use ",(0,i.kt)("inlineCode",{parentName:"p"},'<vertex-viewer camera-controls="false" />')," to disable\nthe default camera controls provided by the viewer."),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,"Type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise<Disposable>")),(0,i.kt)("h3",{id:"scene--promisescene"},(0,i.kt)("inlineCode",{parentName:"h3"},"scene() => Promise<Scene>")),(0,i.kt)("p",null,"Returns a ",(0,i.kt)("inlineCode",{parentName:"p"},"Scene")," that contains methods for performing operations on the\nloaded scene. If a scene has not been loaded, then this method throws\nan exception."),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,"Type: ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise<Scene>")),(0,i.kt)("h2",{id:"css-custom-properties"},"CSS custom properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"--background")),(0,i.kt)("td",{parentName:"tr",align:null},"The background color of the viewer. Defaults to #FFFFFF.")))),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Built with ",(0,i.kt)("a",{parentName:"em",href:"https://stenciljs.com/"},"StencilJS"))))}m.isMDXComponent=!0}}]);